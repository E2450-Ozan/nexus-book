[[rubygems]]
== Ruby, RubyGems and Gem Repositories
{inall}

=== Introduction

For developers using the Ruby programming language, the gem tool serves as their package management solution. In 
fact, since version 1.9 of Ruby, it has been included as part of the default Ruby library. Packages are called 
gems and, just like all package managers, this allows for ease of use when distributing programs or libraries.

////
This and subsequent sections are tentative, subject to change while porting
////

[[ruby-proxy]]
=== Proxying Gems

TBD

////
To proxy a gems format, you simply create a new 'rubygems (proxy)' as documented in
<<admin-repositories>>. 

Minimal configuration steps are:

- Define 'Name'
- Define URL for 'Remote storage'
- Select 'Blob store' for 'Storage'
////

[[ruby-hosted]]
=== Hosting Gems

TBD

////
To create a hosted repository with gems format, simply create a new 'rubygems (hosted)' as documented in
<<admin-repositories>>.

Minimal configuration steps are:

- Define 'Name'
- Select 'Blob store' for 'Storage'

The npm registry information is immediately updated as packages are deployed or deleted from the repository.
/////

[[ruby-group]]
=== Grouping Gems

TBD

////
This is possible for npm repositories by creating a new 'npm (group)' as documented in <<admin-repositories>>.

Minimal configuration steps are:

- Define 'Name'
- Select 'Blob store' for 'Storage'
- Add npm repositories to the 'Members' list in the desired order

////

[[ruby-config]]
=== Using Gem Repositories

TBD

////
TBD - how to use 
////

[[ruby-deploy]]
=== Pushing Gems

TBD

////
TBD - how to push gems
////


////
/* Local Variables: */
/* ispell-personal-dictionary: "ispell.dict" */
/* End:             */
////

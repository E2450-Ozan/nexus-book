[[docker]]
== Docker Container Registry Support
{in} {oss}, {pro}, {proplus}

https://www.docker.com/[Docker] containers and their usage have revolutionized the way applications and the underlying
operation system are packaged and deployed to development, testing and production systems.

The creation of the http://opencontainers.org/[Open Container Initiative] and the involvement of a large number of
stakeholders, guarantees that the ecosystem of tools around the lightweight containers and their usage will continue to
flourish.

https://hub.docker.com/[Docker Hub] is the original registry for Docker container images and it is being joined by more
and more other publicly available registries such as the https://cloud.google.com/container-registry/[Google Container
Registry] and others.

Nexus supports Docker registries as the Docker repository format for hosted and proxy repositories. You can then expose
these repositories to the client-side tools directly or as a repository group, which is a repository that merges and
exposes the contents of multiple repositories in one convenient URL.

This allows you to reduce time and bandwidth usage for accessing Docker containers in a registry as well as share your
containers within your organization in a hosted repository as a completely private Docker registry.

[[docker-ssl-connector]]
=== SSL and Docker Connector Configuration

Docker relies on secure connections using SSL to connect to the repositories. You are therefore required to expose Nexus
to your client tools via HTTPS. This can be configured via an external proxy server or directly with Nexus. Further
details can be found in <<ssl-inbound>>.

Interaction of the Docker client with Docker repositories requires specific ports to be used. These can be configured in
the repository configuration for Docker repositories in the 'Docker Connectors' section. In order for this to work on
your network you need to ensure that the chosen ports are available in your organization and not used by some other
application and that no firewall or other network configuration prevents connectivity.

The recommended minimal configuration requires one port for a Docker repository group used for read access to all
repositories and one port for each hosted Docker repository, that will receive push events from your users. The 'Docker
Connector' configuration displayed in <<fig-docker-connectors>> is available in the configuration for proxy and hosted
Docker repositories as well as Docker repository groups.

[[fig-docker-connectors]]
.Docker Connector Configuration
image::figs/web/docker-connectors.png[scale=50]

If you have configured Nexus to use HTTPS directly, you have to configure a HTTPS docker connector. If an external proxy
server translates incoming HTTPS requests to HTTP and forwards the request to Nexus you have to configure the respective
HTTP port.

[[docker-proxy]]
=== Docker Proxy Repositories

Docker Hub is the common registry used by all container creators and consumers.  To reduce duplicate downloads and
improve download speeds for your developers and CI severs, you should proxy Docker Hub and any other container registry
you use.

To proxy a Docker registry, you simply create a new 'docker (proxy)' as documented in <<admin-repositories>> in
details. 

Minimal configuration steps are:

- Define 'Name'
- Define URL for 'Remote storage'
- Select correct 'Docker index' and configure it
- Select 'Blobstore' for 'Storage'

Optionally you can configure 'Docker Connectors' as explained in <<docker-ssl-connector>>, although typically read
access is done via a repository group and not a proxy repository directly and write access is done against a hosted
repository.

The 'Remote Storage' has to be set to the URL of the remote registry you want to proxy.

The configuration for proxying Docker Hub uses the URL `https://registry-1.docker.io` for the 'Remote storage' URL.

The 'Proxy' configuration for a Docker proxy repository includes a configuration URL to access the 'Docker Index' The
index is used for requests related to searches, users, docker tokens and other apects. The registry and the index are
typically co-hosted by the same provider, but can use different URLs. E.g. the index for Docker Hub is exposed at
`https://index.docker.io/`.

The default option 'Use proxy registry (specified above)' will attempt to retrieve any index data from the same URL
configured as the 'Remote storage' URL.

The option to 'Use Docker Hub' fulfills any index related requests by querying the Docker Hub index at
`https://index.docker.io/`. This configuration is desired when the proxy repository is Docker Hub itself or any of its
mirrors.

The option to use a 'Custom index' allows you to specify the URL of the index for the remote repository.

It is important to configure a correct pair of 'Remote Storage' URL and index. In case of a mismatch e.g., search
results potentially do not reflect the content of the remote repository and other problems can occur.


[[docker-hosted]]
=== Docker Hosted Repositories

A hosted repository using the Docker repository format is typically called a private Docker registry. It can be used to
upload your own container images as well as third-party images. It is common practice to create two separate hosted
repositories for these purposes.

To create a Docker hosted repository, simply create a new 'docker (hosted)' repository as documented in
<<admin-repositories>>. If you add a 'Docker Connectors' configuration you can `push` images to this repository and
subsequently access them directly from the hosted repository or ideally from the Docker repository group as documented
in <<docker-group>>



[[docker-group]]
=== Docker Repository Groups

A repository group is the recommended way to expose all your Docker repositories from Nexus to your users, without
needing any further client side configuration after the initial setup. A repository group allows you to expose the
aggregated content of multiple proxy and hosted repositories with one URL to your tools.

To create a Docker hosted repository, simply create a new 'docker (group)' repository as documented in
<<admin-repositories>> and add all proxy and hosted repositories. 

Using the 'URL' of the repository group can be used in your client tool and will give you access to the container images
in all repositories from the group with one URL. Any new images added as well as any new repositories added to the group
will automatically be available.

[[docker-access]]
=== Accessing Docker Container Images from Repositories and Groups

TBD - whats the client side config in Docker to be able to download from Nexus

[[docker-push]]
=== Pushing Container Images to Docker Hosted Repositories

TBD - docker push and so on, what about credentials, ...

////
/* Local Variables: */
/* ispell-personal-dictionary: "ispell.dict" */
/* End:             */
////

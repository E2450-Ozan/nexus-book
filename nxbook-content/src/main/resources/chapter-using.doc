== Using Nexus

=== Introduction

Nexus provides for anonymous access for users who only need to search
repositories, browse repositories, and peruse the system feeds. This
anonymous access level changes the navigation menu and some of the
options available when you right-click on a repository. This read-only
access displays a user interface shown in <xref
linkend="fig-repoman-anonymous-interface" />.

.Nexus Interface for Anonymous Users
image::figs/web/repository-manager_public-interface.png[]

=== Browsing Repositories

One of the most straightforward uses of the Nexus is to browse the
structure of a Maven repository. If you click on the Browse
Repositories menu item in the Views menu, you should see the following
display. The top-half of <xref linkend="fig-nexus-browse-repo" />
shows you a list of groups and repositories along with the type of the
repository and the repository status. To browse the artifacts that are
stored in a local Nexus instance, click on the Browse Storage tab for
a repository as shown in <xref linkend="fig-nexus-browse-repo" />.

.Browsing a Nexus Repository
image::figs/web/repository-manager_browse-repositories.png[]

When you are browsing a repository, you can right click on any file
and download it directly to your browser. This allows you to retrieve
specific artifacts manually, or examine a <acronym>POM file in
the browser.

NOTE: When browsing a remote repository you might notice that the tree
doesn't contain all of the artifacts in a repository. When you browse
a proxy repository, Nexus is displaying the artifacts which have been
cached locally from the remote repository. If you don't see an
artifact you expected to see through Nexus, it only means that Nexus
has yet to cache the artifact locally. If you have enabled remote
repository index downloads, Nexus will return search results that may
include artifacts not yet downloaded from the remote repository. <xref
linkend="fig-nexus-browse-repo" />, is just an example, and you may or
may not have the <varname>doxia-core artifact available in your
installation of Nexus.  

A Nexus proxy repository acts as a local cache for a remote
repository, in addition to downloading and caching artifacts locally,
Nexus will also download an index of all the artifacts stored in a
particular repository. When searching or browsing for artifacts, it is
often more useful to search and browse the repository index. To view
the repository index, click on the Browse Index tab for a particular
repository to load the interface shown in <xref
linkend="fig-nexus-browse-repo-index" />.

.Browsing a Nexus Repository Index
image::figs/web/repository-manager_browse-repository-index.png[]

As shown in <xref linkend="fig-nexus-browse-repo-index" />, if an
artifact has been downloaded from a remote repository and cached in
Nexus, the artifact or folder will display a small Nexus logo.

==== View Artifact Dependencies

Nexus Professional provides you with the ability to browse an
artifact's dependencies. Using the artifact metadata found in an
artifact's POM, Nexus will scan a repository or a repository group and
attempt to resolve and display an artifact's dependencies. To view an
artifact's dependencies, browse the repository storage or the
repository index, select an artifact (or an artifact's POM), and then
click on the Maven Dependency tab.

On the Maven Dependency tab, you will see the following form elements:

Repository:: When resolving an artifact's dependencies, Nexus will
query an existing repository or repository group. In many cases it
will make sense to select the same repository group you are
referencing in your Maven Settings. If you encounter any problems
during the dependency resolution, you need to make sure that you are
referencing a repository or a group which contains these dependencies.

Mode:: An artifact's dependencies can be list as either a tree or a
list. When dependencies are displayed in a tree, you can inspect
direct dependencies and transitive dependencies. This can come in
handy if you are assessing an artifact based on the dependencies it is
going to pull into your project's build. When you list dependencies as
a list, Nexus is going to perform the same process used by Maven to
collapse a tree of dependencies into a list of dependencies using
rules to merge and override dependency versions if there are any
overlaps or conflicts.

Once you have selected a repository to resolve against and a mode to
display an artifact's dependencies, click on the Resolve button as
shown in <xref linkend="fig-using-dependencies" />. Clicking on this
button will start the process of resolving dependencies, depending on
the number of artifacts already cached by Nexus, this process can take
anywhere from a few seconds to minute. Once the resolution process is
finished, you should see the artifact's dependencies as shown in <xref
linkend="fig-using-dependencies" />.

.View an Artifact's Dependencies
image::figs/web/using_dependencies.png[]

Once you have resolved an artifact's dependencies, you can double
click on a row in the tree or list of dependencies to navigate to
other artifacts within the Nexus interface.

==== Viewing Artifact Metadata

Nexus Professional gives you the ability to view artifact
metadata. When browsing repository storage or a repository index,
clicking on an artifact will load the Artifact Information panel.
Selecting the Artifact Metadata tab will display the interface shown
in <xref linkend="fig-using-viewing-metadata" />.

.Viewing Artifact Metadata
image::figs/web/meta_existing-meta-value.png[]

Artifact metadata consists of a key, a value, and a namespace.
Existing metadata from an artifact's POM is given a urn:maven
namespace, and custom attributes are stored under the urn:nexus/user
namespace.

==== Editing Artifact Metadata

Nexus Professional gives you the ability to add custom attributes to
artifact metadata. To add a custom attribute, click on an artifact in
Nexus, and select the Artifact Metadata tab. On the Artifact Metadata
tab, click on the Add... button and a new row will be inserted into
the list of attributes. Supply a key and value and click the Save
button to update an artifact's metadata. <xref
linkend="fig-using-editing-metadata" /> shows the Artifact Metadata
panel with two custom attributes: "approvedBy" and "approved".

.Editing Artifact Metadata
image::figs/web/meta_setting-meta-value.png[]
  
=== Browsing Groups

Nexus contains ordered groups of repositories which allow you to
expose a series of repositories through a single URL. More often than
not, an organization is going to point Maven at the two default Nexus
groups: Public Repositories and Public Snapshot Repositories. Most
end-users of Nexus are not going to know what artifacts are being
served from what specific repository, and they are going to want to be
able to browse the Public Repository. To support this use case, Maven
allows you to browse the contents of a Nexus Group as if it were a
single merged repository with a tree structure.  <xref
linkend="fig-nexus-browse-group" />, shows the browsing storage
interface for a Nexus Group. There is no difference to the user
experience of browsing a Nexus Group vs. browsing a Nexus Repository.

.Browsing a Nexus Group
image::figs/web/repository-manager_browse-group.png[]

When browsing a Nexus group's storage, you are browsing the underlying
storage for all of the repositories which are contained in a group. If
a Nexus group contains proxy repositories, the Browse Storage tab will
show all of the artifacts in the Nexus group that have been download
from the remote repositories. To browse and search all artifacts
available in a Nexus group, click on the Browse Index tab to load the
interface shown in <xref linkend="fig-nexus-browse-group-index" />.

.Browsing a Nexus Group Index
image::figs/web/repository-manager_browse-group-index.png[]

=== Searching for Artifacts

In the left-hand navigation area, there is an Artifact Search text
field next to a magnifying glass. To search for an artifact by groupId
or artifactId, type in some text and click the magnifying glass.
Typing in the search term "guice" and clicking the magnifying glass
should yield a search result similar to <xref
linkend="fig-nexus-search" />.

.Results of an Artifact Search for "guice"
image::figs/web/search-results.png[]

Once you've located the artifact you were looking for you can click on
the pom link to download the POM or the artifact link to download the
artifact.

* Look at the Version column in the search results. In this version of
the search interface, we decided to list the most recent version. If
you need to view a different version, click on "Show All
Versions". Clicking on "Show All Versions" will drill down into the
list of available versions.

* Look at the Download column in the search results. This Download
column contains direct download links for the most recent version of
the artifact. To download a matching artifact, just click on a link in
this column.

* Select a search result, and you will see the artifact in the
Repository Tree in the lower left-hand quadrant of this interface.
This is helpful to give you context for an artifact. An artifact could
be present in more than one repository. If this is the case, click on
the value next to "Viewing Repository" to switch between multiple
matching repositories.

* In the lower right-hand quadrant of the interface, you will see a
number of tabs which show information about the selected search
result:

** Maven Information: This contains basic identifiers and a
snippet of XML you can use to add this artifact as a project
dependency.
  
** Archive Browser (Nexus Professional): This gives you a way
to explore the contents of an archive in the repository. You can
view the files and folders contained in a matching search
result.
  
** Artifact Information: This tab contains timestampes, file
size, checksum values, and a list of repositories containing a
given artifact.
  
** Artifact Metadata (Nexus Professional): This tab shows all
of the built-in and custom metadata associated with an
artifact.
  
In addition to searching by a groupId or an artifactId,
Nexus has a feature which allows you to search for an artifact by a
checksum.

WARNING: Let me guess? You installed Nexus, ran to the search box,
typed in the name of a group or an artifact, pressed search, and saw
absolutely nothing. No results. Nexus isn't going to retrieve the
remote repository indexes by default, you need to activate downloading
of remote indexes for the three proxy repositories that Nexus ships
with. Without these indexes, Nexus has nothing to search. Find
instructions for activating index downloads in <xref
linkend="config-sect-manage-repo" />.

==== Nexus OpenSearch Integration

OpenSearch a standard which facilitates searching directly from your
browser's search box. If you are using Internet Explorer 7+ or Firefox
2+ you can add any Nexus instance as an OpenSearch provider.  Then you
can just type in a search term into your browser's search field and
quickly search for Maven artifacts. To configure OpenSearch, load
Nexus in a browser and then click on the dropdown next to the search
tool that is embedded in your browser. <xref
linkend="fig-using-opensearch-configure" /> shows the Add Nexus option
that is present in Firefox's OpenSearch provider dropdown.

.Configuring Nexus as an OpenSearch Provider
image::figs/web/using_opensearch-config.png[] 

Once you have added Nexus to the list of OpenSearch providers, click
on the dropdown next to the search term and select Nexus (localhost)
from the list of OpenSearch providers. Type in a groupId, artifactId,
or portion of a Maven identifier and press enter. Your
opensearch-friendly web browser will then take you to the search
results page of Nexus displaying all the artifacts that match your
search term.

.OpenSearch Search Results in Nexus
image::figs/web/using_opensearch-search.png[]

Once, you have configured your browser to use Nexus as an OpenSearch
provider, searching for a Maven artifact is as simple as typing in a
groupId or artifactId, selecting Nexus from the dropdown shown in
<xref linkend="fig-using-permanent-opensearch-option" />, and
performing a search.

.Nexus Available as an Option in the Firefox OpenSearch Provider List
image::figs/web/using_opensearch-permanent.png[]

==== Searching Artifact Metadata

Nexus Professional provides you with the ability to configure custom
artifact metadata and search for artifacts with specific metadata. To
search for artifacts using metadata, click on the Advanced Search link
directly below the search field in the Nexus application menu to open
the Search panel. Once in the search panel, click on the Keyword
Search and click on Metadata Search in the search type dropdown as
shown in <xref linkend="fig-using-search-metadata" />.

.Searching Artifact Metadata
image::figs/web/meta_search-selection.png[]

Once you select the Metadata Search you will see two search fields and
an operator dropdown. The two search fields are the key and value of
the metadata you are searching for. The key corresponds to the key of
the metadata you are searching for, and the value contains the value
or value range you are searching for. The operator dropdown can be set
to Equals, Matches, Bounded, or Not Equal.

.Metadata Search Results for Custom Metadata
image::figs/web/meta_search-function.png[]

Once you locate a matching artfiact in the Metadata Search interface,
click on the artifact and then select the Artifact Metadata to examine
an artifacts metadata as shown in <xref
linkend="fig-using-search-metadata-results" />.

.Metadata Search Results for Custom Metadata
image::figs/web/meta_search-result-0.png[]

=== Uploading Artifacts 

When your build makes use of proprietary or custom dependencies which
are not available from public repositories, you will often need to
find a way to make them available to developers in a custom Maven
repository. Nexus ships with a preconfigured 3rd Party repository that
was designed to hold 3rd Party dependencies which are used in your
builds. To upload artifacts to a repository, select a hosted
repository in the Repositories panel and then click on the Artifact
Upload tab. Clicking on the Artifact Upload tab will display the tab
shown in <xref linkend="fig-using-artifact-upload" />.

.Artifact Upload Form
image::figs/web/using_artifact-upload.png[]

To upload an artifact, click on Select Artifact(s) for Upload... and
select one or more artifacts from the filesystem to upload. Once you have
selected an artifact, you can modify the classifier and the extension
before clicking on the Add Artifact button. Once you have clicked on the
Add Artifact button, you can then configure the source of the Group,
Artifact, Version (GAV) parameters. If the artifact you are uploading is a
JAR file that was created by Maven it will already have POM information
embedded in it. If you are uploading a JAR from a vendor you will likely
need to set the Group Identifier, Artifact Identifier, and Version
manually. To do this, select GAV Parameters from the GAV Definition
dropdown at the top of this form. Selecting GAV Parameters will expose a
set of form fields which will let you set the Group, Artifact, Version,
and Packaging of the artifacts being uploaded. If you would prefer to set
the Group, Artifact, and Version from a POM file associated with the
uploaded artifact, select From POM in the GAV Definition dropdown.
Selecting From POM in this dropdown will expose a button labeled "Select
POM to Upload". Once a POM file has been selected for upload, the name of
the POM file will be displayed in the form field below this button.

The Artifact Upload panel supports multiple artifacts with the same
Group, Artifact, and Version identifiers. For example, if you need to
upload multiple artifacts with different classifiers, you may do so by
clicking on Select Artifact(s) for Upload and Add Artifact multiple
times.
  
=== Browsing System Feeds
  
Nexus provides feeds that capture system events, you can
browse these feeds by clicking on System Feeds under the View menu.
Clicking on System Feeds will show the panel in <xref
linkend="fig-repoman-system-feeds" />. You can use these simple interface
to browse the most recent reports of artifact deployments, cached
artifacts, broken artifacts, and storage changes that have occurred in
Nexus.

.Browsing Nexus System Feeds
image::figs/web/repository-manager_system-feed.png[]

These feeds can come in handy if you are working at a large
organization with multiple development teams deploying to the same
instance of Nexus. If such an arrangement, all developers in an
organization can subscribe to the RSS feeds for New
Deployed Artifacts as a way to ensure that everyone is aware when a new
release has been pushed to Nexus. Exposing these system events as
RSS feeds also opens to the door to other, more
creative uses of this information, such as connecting Nexus to external
automated testing systems. To access the RSS feeds for
a specific feed, select the feed in the System Feeds view panel and then
click on the Subscribe button. Nexus will then load the
RSS feed in your browse and you can subscribe to the
feed in your favorite RSS

There are six system feeds available in the System Feeds view, and
each has a URL which resembles the following
URL

----
http://localhost:8081/nexus/service/local/feeds/recentlyChangedFiles
----

Where recentChanges would be replaced with the
identifier of the feed you were attempting to read. Available system feeds
include:

.Available System Feeds
[options="header,footer"]
|=======================
|Feed Identifier|Description   |
|authcAuthz|
Authentication and Authorization Events

|brokenArtifacts|
Broken Artifacts (Checksum mismatch, missing checksums,
invalid POMs)

|brokenFiles|
Broken Files (Checksum errors.)

|errorWarning|
Errors, warnings, and exceptions from Nexus

|recentlyCachedOrDeployedArtifacts|
New artifacts in all repositories (cached or deployed)

|recentlyCachedOrDeployedFiles|
New files in all repositories (cached or deployed)

|recentlyCachedArtifacts|
New cached artifacts in all repositories

|recentlyCachedFiles|
New cached files in all repositories

|recentlyDeployedArtifacts|
New deployed artifacts in all repositories

|recentlyDeployedFiles|
New deployed files in all repositories

|recentlyChangedArtifacts|
Changed artifacts in all repositories

|recentlyChangedFiles|
Changed files in all repositories

|systemRepositoryStatusChanges|
Automatic or User-initiated status changes (out-of-service and blocked proxies)
  
|systemChanges|
Booting nexus, changing configuration, re-indexing, and
rebuilding of attributes
  
|=======================
 
=== Log Files and Configuration

The Logs and Config Files link is only visible to Administrative users
under the Views menu. Click on this option brings up the dialog shown
in <xref linkend="fig-nexus-logs" />. From this screen you can view
the following log and configuration files by clicking on the drop down
selection next to the Download button.

nexus.log:: Think of this as the general application log for
Nexus. Unless you are an administrative user, you might not have must
interest in the information in this log. If you are trying to debug an
error, or if you have uncovered a bug in Nexus, you'll use this log
viewer to diagnose problems with Nexus.

nexus.xml:: This XML file contains most of the configuration data for
your instance of Nexus. It is stored in
\${NEXUS_HOME}/runtime/apps/nexus/conf/nexus.xml

log4j.properties:: This file controls the logging facility of Nexus
using the standard Log4J property file syntax. To edit the format or
level of the Log4J logging, click on Log under the Administration
menu. For more information about configuring the Nexus Log, see <xref
linkend="configuring-sect-log" />.

security.xml:: This XML file contains the configuration for the
XmlAuthenticatingRealm and the XmlAuthorizingRealm. It contains
built-in user definitions and any externally mapped users that are
mapped to Nexus roles.

.Browsing Nexus Logs and Configuration
image::figs/web/repository-manager_log-file.png[]

If you are running Nexus Professional, you should see a few more
configuration files in this directory which will correspond to the
Procurement and Staging suites. The configuration files specific to
Nexus Professional are:

procurement.xml:: This file contains the configuration for the Nexus
Procurement Suite as described in <xref linkend="procure" />.

staging.xml:: This file contains the configuration for the Staging
Suite as described in <xref linkend="staging" />.

In <xref linkend="fig-nexus-logs" /> there is a "tail" checkbox. If
this box is checked, then Nexus will always show you the end of a log
file. This can come in handy if you want to see a continuously updated
log file. When this tail box is checked, a dropdown at the bottom of
the panel allows you to set the update frequency. The contents of this
dropdown are shown in <xref linkend="fig-using-update-freq" />. If an
update interval is selected, Nexus will periodically refresh the
selected log file.

.Selecting the Update Frequency when Tailing a Log File
image::figs/web/using_tail-frequency.png[]

=== Changing Your Password 

If you have the appropriate security privilege, you will see an option
to change your password in the left-hand side of the browser. To
change your password, click on change password, supply your current
password, and choose a new password. When you click on Change
Password, your Nexus password will be changed.

.Changing Your Nexus Password
image::figs/web/repository-manager_change-password.png[]

=== Filing a Problem Report

If you encounter a problem with Nexus, you can use the Nexus UI to
report a bug or file an issue against the Nexus project in Sonatype's
JIRA instance. To file a problem report, you will first need to sign
up for an account on http://issues.sonatype.org. In Nexus
1.6, you can click on "File Issue" in the Nexus menu, supply your
Sonatype JIRA credentials, and file a problem report. Supply your JIRA
username and password along with a short title and a description as
shown in the following figure. When you file a Nexus problem report,
Nexus will create a new issue in JIRA and attach your configuration
and logs to the newly filed issue.

.Generating a Nexus Problem Report
image::figs/web/configuring-generate-report.png[]
